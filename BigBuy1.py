# usage: rm -rf ./log/* && python3 BigBuy1.py --update >./bigbuy_log.out 2>./bigbuy_error.out &
import requests
import xml.etree.ElementTree as ET

import pprint
import csv
import pickle
import json
from progress.bar import Bar
from time import sleep
import sys
import argparse
import pandas as pd
import lib.logger as lgr
import time,datetime
import numpy as np

import allowed_categories
import minimum_price



parser = argparse.ArgumentParser(description="This is a program to handle Nobrand ")
parser.add_argument("-u","--update",action="store_true",help="It updates the numpy files")
parser.add_argument("-s","--sync",action="store_true",help="It syncs the files")
parser.add_argument("-d","--send",action="store_true",help="It sends the files")

args=parser.parse_args()

UPDATE = False
STORE = False

add_product_endpoint = "http://no1brand.ru/add-product/"

AuthHeader= {"Authorization":"Bearer Zjk2ZTI0YWE1ZGNiNzBmMWNkZWIwNjliNTE2NzcyNDQ1N2EzMDllNzhhMGIyZDllNTViMmQxZGFhNWY5ODM3Yg"}

def update(logger) :
    logger.wtil("Now updating...")
    logger.wtil("Getting stock_info...")
    with open("stock_info","wb") as f :
        r=requests.get("https://api.bigbuy.eu/rest/catalog/productsstock.json", headers=AuthHeader)
        pickle.dump(r.content, f);
    logger.wtil("Getting products...")
    with open("Products","wb") as f :
        r=requests.get("https://api.bigbuy.eu/rest/catalog/products", headers=AuthHeader)
        pickle.dump(r.content, f);
    logger.wtil("Getting english_information...")
    with open("english_information","wb") as f :
        r=requests.get("https://api.bigbuy.eu/rest/catalog/productsinformation.json?isoCode=en", headers=AuthHeader)
        pickle.dump(r.content, f);
    logger.wtil("Getting information...")
    with open("Information","wb") as f :
        r=requests.get("https://api.bigbuy.eu/rest/catalog/productsinformation.json?isoCode=ru", headers=AuthHeader)
        pickle.dump(r.content, f);
    logger.wtil("Getting images...")
    with open("Images","wb") as f :
        r=requests.get("https://api.bigbuy.eu/rest/catalog/productsimages", headers=AuthHeader)
        pickle.dump(r.content, f);
    logger.wtil("Getting categories...")
    with open("categories","wb") as f :
        r=requests.get("https://api.bigbuy.eu/rest/catalog/categories.json?isoCode=ru", headers=AuthHeader)
        pickle.dump(r.content, f);
    with open("categoriesEn","wb") as f :
        r=requests.get("https://api.bigbuy.eu/rest/catalog/categories.json?isoCode=en", headers=AuthHeader)
        pickle.dump(r.content, f);

    logger.wtil("Getting manufacturers...")
    with open("manufacturers","wb") as f :
        r=requests.get("https://api.bigbuy.eu/rest/catalog/manufacturers.json", headers=AuthHeader)
        pickle.dump(r.content, f);
    logger.wtil("Done...")

class Product:
    def __init__(self):
        self.bigbuy             = 0
        self.small_description  = 0
        self.description        = 0
        self.title              = 0
        self.sku                = 0
        self.category           = 0
        self.style              = 0
        self.colour             = 0
        self.gender             = 0
        self.image_1            = 0
        self.image_2            = 0
        self.image_3            = 0
        self.street_price       = 0
        self.suggested_price    = 0
        self.novat_price        = 0

    def setData(self,productdata):
        self.bigbuy             = productdata[0]
        self.small_description  = productdata[1]
        self.description        = productdata[2]
        self.title              = productdata[3]
        self.sku                = productdata[4]
        self.category           = productdata[5]
        self.style              = productdata[6]
        self.colour             = productdata[7]
        self.gender             = productdata[8]
        self.image_1            = productdata[9]
        self.image_2            = productdata[10]
        self.image_3            = productdata[11]
        self.street_price       = productdata[12]
        self.suggested_price    = productdata[13]
        self.novat_price        = productdata[14]

logger = lgr.Logger("bigbuy")
ts = time.time()

logger.wtil("Launching application..."+datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d %H:%M:%S'))

if args.update:
    update(logger)
    sys.exit()

logger.wtil("Reading data from files...")
with open("Products","rb") as f :
    products =pickle.load(f)
with open("stock_info","rb") as f :
    stock_info = pickle.load(f)
with open("english_information","rb") as f :
    english_information =pickle.load(f)
with open("Information","rb") as f :
    information =pickle.load(f)
with open("Images","rb") as f :
    images =pickle.load(f)
with open("categories","rb") as f :
    categories =pickle.load(f)
with open("manufacturers","rb") as f :
    manufacturers =pickle.load(f)
with open("categoriesEn","rb") as f :
    categoriesEn =pickle.load(f)
productsjson = json.loads(products)
stock_info_json = json.loads(stock_info)
informationjson = json.loads(information)
english_informationjson = json.loads(english_information)
imagesjson = json.loads(images)
categoriesjson = json.loads(categories)
categoriesjsonEn = json.loads(categoriesEn)
manufacturersjson = json.loads(manufacturers)

logger.wtil("Data processed...")

def Quantity(idofProduct,stock_info_json):
    this_stock_info = [x for x in stock_info_json if x['sku'] == idofProduct]
    if(len(this_stock_info) == 0):
     return 0
    stock_info  = this_stock_info[0]['stocks'][0]['quantity']

    return stock_info

if args.sync:

    all_listing_skus = []
    all_listing_inner_skus = []
    resp=requests.get(url="http://no1brand.ru/get-number-of-active-products/bigb")
    number_of_active_products = int(resp.content)
    number_of_requests = int(number_of_active_products / 1000)

    for i in range(0,number_of_requests+1):
     offset = i*1000
     resp=requests.get(url="http://no1brand.ru/product-xml-with-offset/"+str(offset)+"/bigb")
     root = ET.fromstring(resp.content)
     [all_listing_skus.append(x.text) for x in root.findall('./product/sku')]
     [all_listing_inner_skus.append(x.text) for x in root.findall('./product/inner_sku')]
    logger.wtil("Number of products: "+str(len(all_listing_skus)))


    for sku in all_listing_skus:
        if( Quantity(sku,stock_info_json) < 1 ):

            endpoint = "http://no1brand.ru/disable-product-with-sku/"+str(sku)
            logger.wtil("Now disabling: "+str(sku))
            resp=requests.get(url=endpoint)

            logger.wtil(str(resp.content))

    logger.wtil("Finished sync...")
    sys.exit()

products = []

logger.wtil("Now uploading products...")
number_of_products = len(productsjson)
number_of_updated_products = 0
logger.wtil("Number of products: "+str(number_of_products))

disabled_categories = []
for i in range(len(productsjson)):
    thisproduct = productsjson[i]
    product_id = productsjson[i]['id']

    thisinformation = [x for x in informationjson if x['id'] == product_id][0]
    this_english_information = [x for x in english_informationjson if x['id'] == product_id][0]
    thisimages = [x for x in imagesjson if x['id'] == product_id][0]
    this_stock_info = [x for x in stock_info_json if x['id'] == product_id][0]

    stock_info  = this_stock_info['stocks'][0]['quantity']
    ids         = thisproduct['id']
    description = thisinformation['description']
    title       = thisinformation['name']
    sku         = thisinformation['sku']

    title_in_english = this_english_information['name']

    for k in range(len(categoriesjson)):
        if thisproduct['category']== categoriesjson[k]['id']:
            this_cat_info = categoriesjson[k]
            break
    for k in range(len(categoriesjsonEn)):
        if thisproduct['category']== categoriesjsonEn[k]['id']:
            this_cat_infoEn = categoriesjsonEn[k]
            break
    category= this_cat_info['name']
    categoryEn= this_cat_infoEn['name']

    for k in range(len(manufacturersjson)):
        if thisproduct['manufacturer']== manufacturersjson[k]['id']:
            manufacturer = manufacturersjson[k]['name']
            break

    allowed_skus = [ "G0500163", "V1800128", "V1800138", "V1800139", "V1800141", "V1800147", "V1800149", "V1800150", "V1800153", "V1800177", "V1800181", "V1800230", "V1800233", "V1800245", "V1800248", "V1800251", "V1300251", "V1300260", "V1300330", "V1300334", "V1300338", "S0300702", "S0300704", "S0300705", "S0300716", "S0300715", "S0300706", "S0300707", "S0300750", "S0300717", "S0300752", "S0300742", "S0300722", "S0300686", "S0300687", "S0300688", "S0300286", "S0300712", "S0300571", "S0300578", "S0300577", "S0300576", "S0300582", "S0300581", "S0300580", "S0301899", "S0300565", "S0300568", "S0301650", "S0300966", "S0301153", "S0300484", "S0300589", "S0300591", "S0300982", "S0300983", "S0300984", "S0301050", "S0300991", "S0301051", "S0300997", "S0301000", "S0300998", "S0301059", "S0301063", "S0301008", "S0301010", "S0301013", "S0301069", "S0301068", "S0301066", "S0301064", "S0301071", "S0300724", "S0300971", "S0300975", "S0300554", "S0301027", "S0300595", "S0300596", "S0302269", "S0301607", "S0301611", "S0301606", "S0301614", "S0301608", "S0301610", "S0300486", "S0302201", "S0300491", "S0302067", "S0302075", "S0302068", "S0302076", "S0300207", "S0300536", "S0301067", "S0300533", "S0301372", "S0300229", "S0300230", "S0300231", "S0300232", "S0300233", "S0300234", "S0300235", "S0300236", "S0300237", "S0300238", "S0300239", "S0300240", "S0300241", "S0300266", "S0300272", "S0300287", "S0300290", "S0300291", "S0300300", "S0300501", "S0301400", "S0301403", "S0300632", "S0300603", "S0300337", "S0300351", "S0300421", "S0300457", "S0300540", "S0300550", "S0300627", "S0300629", "S0300630", "S0300631", "S0300651", "S0300652", "S0300653", "S0300654", "S0300664", "S0300703", "S0300709", "S0300723", "S0300749", "S0300753", "S0300858", "S0300870", "S0300873", "S0300881", "S0300885", "S0301093", "S0301097", "S0301098", "S0301101", "S0301112", "S0301113", "S0301114", "S0301115", "S0301131", "S0301205", "S0301312", "S0301494", "S0301532", "S0301660", "S0301671", "S0301848", "S0301849", "S0301850", "S0301853", "S0301888", "S0301901", "S0301926", "S0301940", "S0301949", "S0301981", "S0301982", "S0301983", "S0301985", "S0301986", "S0301987", "S0301988", "S0302008", "S0302016", "S0302218", "S0302221", "S0302254", "S0302270", "S0302281", "S0301136", "S0301158", "S0301159", "S0301170", "S0301249", "S0301989", "S0301990", "S0301991", "S0301992", "S0300326", "S0300322", "S0300323", "S0300325", "S0300319", "S0300320", "S0300321", "S0300314", "S0300316", "S0300317", "S0300318", "S0300310", "S0300311", "S0300312", "S0301997", "S0302199", "S0302175", "S0302156", "S0302157", "S0302164", "S0302154", "S0302132", "S0302133", "S0302135", "S0302140", "S0302142", "S0302146", "S0302148", "S0302064", "S0302271", "S0302238", "S0302278", "S0302279", "S0302275", "S0302274", "S0302263", "S0301961", "S0302291", "S0302294", "S0302295", "S0302296", "S0302297", "S0302298", "S0302299", "S0302226", "S0302307", "S0301900", "S0301588", "S0301837", "S0301046", "S0302362", "S0302363", "S0301485", "S0301488", "S0301489", "S0301497", "S0301498", "S0302364", "S0302365", "S0302367", "S0302368", "S0302369", "S0300698", "S0300711", "S0300725", "S0301507", "S0301508", "S0301509", "S0301510", "S0301511", "S0301529", "S0301521", "S0301523", "S0301527", "S0302370", "S0302371", "S0302372", "S0302376", "S0300713", "S0302375", "S0301967", "S0301808", "S0300718", "S0300726", "S0300727", "S0300728", "S0300324", "S0300382", "S0300407", "S0300413", "S0300679", "S0300680", "S0300684", "S0300685", "S0300691", "S0300692", "S0300693", "S0300694", "S0300719", "S0300720", "S0300721", "S0300729", "S0300730", "S0300731", "S0300732", "S0300733", "S0300734", "S0300735", "S0300736", "S0300737", "S0300739", "S0300740", "S0300741", "S0300743", "S0300746", "S0300747", "S0300797", "S0300835", "S0300905", "S0301077", "S0301146", "S0301160", "S0301168", "S0301229", "S0301245", "S0301248", "S0301250", "S0301258", "S0301265", "S0301267", "S0301323", "S0301324", "S0301468", "S0301475", "S0301504", "S0301505", "S0301537", "S0301538", "S0301540", "S0301542", "S0301543", "S0301548", "S0301549", "S0301570", "S0301594", "S0301601", "S0301730", "S0302086", "S0302093", "S0302094", "S0302095", "S0302096", "S0302097", "S0302101", "S0302102", "S0302105", "S0302107", "S0302109", "S0302111", "S0302115", "S0302117", "S0302118", "S0302119", "S0302120", "S0302385", "S0302394", "S0302404", "S0302406", "S0302408", "S0302410", "S0302413", "S0302414", "S0302416", "S0302417", "S0302418", "S0302420", "S0302421", "S0302425", "S0302426", "S0302427", "S0302429", "S0302430", "S0302432", "S0302433", "S0302434", "S0302435", "S0302436", "S0302447", "S0302448", "S0302449", "S0302451", "S0302452", "S0302453", "S0302455", "S0302456", "S0302457", "S0302458", "S0302459", "S0302460", "S0302461", "S0302462", "S0302463", "S0302464", "S0302465", "S0302468", "S0302469", "S0302470", "S0302471", "S0302472", "S0302473", "S0302474", "S0302475", "S0302476", "S0302477", "S0302478", "S0302479", "S0302480", "S0302481", "S0302483", "S0302484", "S0302485", "S0302486", "S0302487", "S0302488", "S0302490", "S0302494", "S0302495", "S0302496", "S0302497", "S0302500", "S0302501", "S0302502", "S0302503", "S0302504", "S0302505", "S0302506", "S0302507", "S0302508", "S0302515", "S0302516", "S0302523", "S0302527", "S0302528", "S0302529", "S0302530", "S0302531", "S0302532", "S0302534", "S0302535", "S0302536", "S0302537", "S0302538", "S0302542", "S0302543", "S0302544", "S0302545", "S0302550", "S0302551", "S0302552", "S0302553", "S0302554", "S0302555", "S0302556", "S0302557", "S0302558", "S0302559", "S0302560", "S0302561", "S0302567", "S0302568", "S0302569", "S0302570", "S0302571", "S0302572", "S0302575", "S0302576", "S0302577", "S0302579", "S0302581", "S0302582", "S0302583", "S0302584", "S0302585", "S0302586", "S0302587", "S0302588", "S0302589", "S0302590", "S0302591", "S0302592", "S0302593", "S0302594", "S0302595", "S0302596", "S0302597", "S0302598", "S0302599", "S0302600", "S0302601", "S0302602", "S0302603", "S0302604", "S0302605", "S0302606", "S0302607", "S0302694", "S0302688", "S0302689", "S0302756", "S0302725", "S0302738", "S0302739", "S0302740", "S0302741", "S0302787", "S0302788", "S0302813", "S0302790", "S0302794", "S0302795", "S0302796", "S0302797", "S0302798", "S0302800", "S0302804", "S0302805", "S0302808", "S0302809", "S0302810", "S0302811", "S0302812", "S0302644", "S0302648", "S0302823", "S0302824", "S0302851", "S0302832", "S0302836", "S0302838", "S0302844", "S0302852", "S0302853", "S0302854", "S0302855", "S0302857", "S0302858", "S0302860", "S0302865", "S0302867", "S0302876", "S0302878", "S0302881", "S0302885", "S0302886", "S0302887", "S0302889", "S0302891", "S0302892", "S0302893", "S0302894", "S0302895", "S0302896", "S0302898", "S0302899", "S0302900", "S0302901", "S0302903", "S0302905", "S0302906", "S0302908", "S0302909", "S0302912", "S0302913", "S0302914", "S0302915", "S0302917", "S0302918", "S0302919", "S0302920", "S0302922", "S0302923", "S0302924", "S0302925", "S0302926", "S0302927", "S0302928", "S0302929", "S0302930", "S0302931", "S0302932", "S0302935", "S0302936", "S0302939", "S0302960", "S0302966", "S0302969", "S0302973", "S0302974", "S0302975", "S0302976", "S0302977", "S0302978", "S0302980", "S0302981", "S0302982", "S0302983", "S0302984", "S0302985", "S0302989", "S0302994", "S0302997", "S0302998", "S0303024", "S0303026", "S0303028", "S0303032", "S0303035", "S0303038", "S0303039", "S0303040", "S0303041", "S0303050", "S0303053", "S0303054", "S0303055", "S0303056", "S0303062", "S0303065", "S0303068", "S0303071", "S0303081", "S0303093", "S0303145", "S0303146", "S0303157", "S0303158", "S0303159", "S0303160", "S0303162", "S0303163", "S0303164", "S0303165", "S0303167", "S0303169", "S0303172", "S0303174", "S0303175", "S0303177", "S0303178", "S0303179", "S0303180", "S0303182", "S0303183", "S0303184", "S0303185", "S0303186", "S0303187", "S0303188", "S0303189", "S0303190", "S0303191", "S0303192", "S0303193", "S0303194", "S0303195", "S0303196", "S0303203", "S0303206", "S0303207", "S0303209", "S0303211", "S0303212", "S0303218", "S0303219", "S0303221", "S0303223", "S0303225", "S0303285", "S0303288", "S0303232", "S0303443", "S0303444", "S0303256", "S0303274", "S0303275", "S0303255", "S0303249", "S0303251", "S0303271", "S0303250", "S0303259", "S0303269", "S0303247", "S0303262", "S0303260", "S0303268", "S0303264", "S0303261", "S0303263", "S0303270", "S0303252", "S0303267", "S0303258", "S0303229", "S0303230", "S0303231", "S0303233", "S0303226", "S0303227", "S0303293", "S0303311", "S0303305", "S0303314", "S0303597", "S0303343", "S0303601", "S0303345", "S0303606", "S0303608", "S0303605", "S0303564", "S0303607", "S0303609", "S0303600", "S0303568", "S0303575", "S0303348", "S0303587", "S0303572", "S0303588", "S0303590", "S0303396", "S0303591", "S0303598", "S0303398", "S0303574", "S0303579", "S0303583", "S0303595", "S0303573", "S0303576", "S0303577", "S0303596", "S0303562", "S0303331", "S0303581", "S0303603", "S0303563", "S0303565", "S0303552", "S0303522", "S0303543", "S0303537", "S0303512", "S0303501", "S0303434", "S0303526", "S0303515", "S0303554", "S0303549", "S0303509", "S0303528", "S0303532", "S0303310", "S0303561", "S0303302", "S0303504", "S0303497", "S0303553", "S0303236", "S0303555", "S0303234", "S0303240", "S0303503", "S0303241", "S0303524", "S0303473", "S0303525", "S0303242", "S0303540", "S0303517", "S0303244", "S0303519", "S0303520", "S0303530", "S0303558", "S0303498", "S0303539", "S0303538", "S0303556", "S0303461", "S0303460", "S0303462", "S0303542", "S0303463", "S0303548", "S0303464", "S0303500", "S0303465", "S0303559", "S0303466", "S0303467", "S0303521", "S0303513", "S0303468", "S0303471", "S0303535", "S0303499", "S0303469", "S0303470", "S0303507", "S0303474", "S0303529", "S0303506", "S0303505", "S0303536", "S0303533", "S0303547", "S0303508", "S0303546", "S0303560", "S0303511", "S0303485", "S0303622", "S0303645", "S0303671", "S0303490", "S0303489", "S0303491", "S0303495", "S0303653", "S0303654", "S0303656", "S0303657", "S0303658", "S0303661", "S0303662", "S0303665", "S0303666", "S0303664", "S0303669", "S0303675", "S0303676", "S0303728", "S0303730", "S0303732", "S0303738", "S0303759", "S0303760", "S0303761", "S0303762", "S0303763", "S0303764", "S0303765", "S0303766", "S0303767", "S0303770", "S0303771", "S0303776", "S0303780", "S0303803", "S0303804", "S0303805", "S0303806", "S0303808", "S0303810", "S0303815", "S0303816", "S0304107", "S0304096", "S0304098", "S0304099", "S0304100", "S0304101", "S0304102", "S0304105", "S0304106", "S0304108", "S0304109", "S0304110", "S0304113", "S0304119", "S0304120", "S0304121", "S0304122", "S0304123", "S0304124", "S0304125", "S0304126", "S0304129", "S0304130", "S0304132", "S0304133", "S0304134", "S0304135", "S0304137", "S0304138", "S0304139", "S0304140", "S0304141", "S0304142", "S0304143", "S0304144", "S0304145", "S0304147", "S0304148", "S0304150", "S0304151", "S0304152", "S0304153", "S0304154", "S0304155", "S0304156", "S0304157", "S0304158", "S0304160", "S0304162", "S0304164", "S0304165", "S0304167", "S0304171", "S0304173", "S0304179", "S0304180", "S0304181", "S0304182", "S0304183", "S0304184", "S0304219", "S0304220", "S0304224", "S0304225", "S0304226", "S0304227", "S0304228", "S0304229", "S0304231", "S0304232", "S0304239", "S0304242", "S0304250", "S0304266", "S0304267", "S0304272", "S0304274", "S0304279", "S0304281", "S0304282", "S0304285", "S0304288", "S0304290", "S0304292", "S0304247", "S0304248", "S0304251", "S0304252", "S0304253", "S0304255", "S0304258", "S0304259", "S0304264", "S0304268", "S0304269", "S0304271", "S0304275", "S0304276", "S0304277", "S0304278", "S0304280", "S0304284", "S0304286", "S0304289", "S0304291", "S0304295", "S0304302", "S0304303", "S0304307", "S0304308", "S0304310", "S0304317", "S0304370", "S0304371", "S0304376", "S0304378", "S0304380", "S0304381", "S0304382", "S0304385", "S0304388", "S0304398", "S0304399", "S0304400", "S0304401", "S0304403", "S0304404", "S0304406", "S0304407", "S0304408", "S0304409", "S0304411", "S0304416", "S0304420", "S0304426", "S0304429", "S0304430", "S0304431", "S0304433", "S0304445", "S0304457", "S0304459", "S0304468", "S0304095", "S0304104", "S0304178", "S0304188", "S0304189", "S0304190", "S0304191", "S0304192", "S0304193", "S0304194", "S0304195", "S0304196", "S0304197", "S0304198", "S0304199", "S0304203", "S0304204", "S0304205", "S0304206", "S0304207", "S0304208", "S0304209", "S0304210", "S0304211", "S0304212", "S0304213", "S0304214", "S0304215", "S0304216", "S0304312", "S0304315", "S0304316", "S0304319", "S0304320", "S0304321", "S0304324", "S0304326", "S0304327", "S0304330", "S0304394", "S0303860", "S0303875", "S0303876", "S0303877", "S0303880", "S0303881", "S0303885", "S0303886", "S0303887", "S0303889", "S0303891", "S0303894", "S0303896", "S0303902", "S0303903", "S0303904", "S0303906", "S0303921", "S0303941", "S0304019", "S0304020", "S0304021", "S0304022", "S0304023", "S0304024", "S0304025", "S0304026", "S0304027", "S0304028", "S0304029", "S0304030", "S0304031", "S0304032", "S0304033", "S0304034", "S0304035", "S0304036", "S0304037", "S0304038", "S0304039", "S0304040", "S0304041", "S0304042", "S0304044", "S0304045", "S0304046", "S0304047", "S0304048", "S0304049", "S0304050", "S0304051", "S0304052", "S0304053", "S0304054", "S0304055", "S0304057", "S0304058", "S0304059", "S0304060", "S0304061", "S0304062", "S0304063", "S0304064", "S0304065", "S0304066", "S0304067", "S0304068", "S0304069", "S0304070", "S0304072", "S0304073", "S0304074", "S0304075", "S0304076", "S0304078", "S0304079", "S0304082", "S0304083", "S0304085", "S0304086", "S0304088", "S0309565", "S0309901", "S0309902", "S0309906", "S0309919", "S0309957", "S0309958", "S0309960", "S0309962", "S0309963", "S0309964", "S0309965", "S0309967", "S0309972", "S0309973", "S0309974", "S0309975", "S0309976", "S0309977", "S0309979", "S0309980", "S0307771", "S0307752", "S0307778", "S0308163", "S0308164", "S0308167", "S0308168", "S0308171", "S0308172", "S0308176", "S0308177", "S0308192", "S0308193", "S0309001", "S0309055", "S0309204", "S0309217", "S0309218", "S0309226", "S0309231", "S0309232", "S0309233", "S0309503", "S0307900", "S0308219", "S0308223", "S0308820", "S0309588", "S0309589", "S0309593", "S0309594", "S0309596", "S0309597", "S0309598", "S0309600", "S0309601", "S0309607", "S0309613", "S0309614", "S0309616", "S0309681", "S0310069", "S0310109", "S0310108", "S0310168", "S0310183", "S0310203", "S0310210", "S0310222", "S0310235", "S0310284", "S0310295", "S0311051", "S0310344", "S0310345", "S0310347", "S0310360", "S0310362", "S0310363", "S0310364", "S0310366", "S0310367", "S0310368", "S0310369", "S0310387", "S0310435", "S0310441", "S0310443", "S0310444", "S0310445", "S0310446", "S0310447", "S0310455", "S0307788", "S0307789", "S0307791", "S0307794", "S0307795", "S0307804", "S0307806", "S0307807", "S0307808", "S0307809", "S0307810", "S0307816", "S0307819", "S0307820", "S0307821", "S0307823", "S0307826", "S0307830", "S0307831", "S0307833", "S0307834", "S0307847", "S0307850", "S0307851", "S0307906", "S0307944", "S0307946", "S0307975", "S0307976", "S0308071", "S0308072", "S0308074", "S0308566", "S0308583", "S0308586", "S0308587", "S0308588", "S0308594", "S0308595", "S0308596", "S0308608", "S0308627", "S0308632", "S0308633", "S0308640", "S0308641", "S0308655", "S0308657", "S0308658", "S0308659", "S0308662", "S0308663", "S0308664", "S0308665", "S0308667", "S0308676", "S0308693", "S0308694", "S0308743", "S0308748", "S0308750", "S0308755", "S0308756", "S0308762", "S0308766", "S0308772", "S0308957", "S0309096", "S0309097", "S0309101", "S0309105", "S0309109", "S0309110", "S0309111", "S0309112", "S0309113", "S0309114", "S0309115", "S0309117", "S0309118", "S0309121", "S0309123", "S0309124", "S0309126", "S0309127", "S0309128", "S0309130", "S0309131", "S0309132", "S0309133", "S0309135", "S0309137", "S0309138", "S0309139", "S0309140", "S0309143", "S0309144", "S0309146", "S0309148", "S0309149", "S0309150", "S0309152", "S0309153", "S0309154", "S0309155", "S0309157", "S0309158", "S0309159", "S0309160", "S0309161", "S0309162", "S0309163", "S0309167", "S0309726", "S0309727", "S0309728", "S0309729", "S0309730", "S0309731", "S0309732", "S0309733", "S0309734", "S0309735", "S0309736", "S0309737", "S0309738", "S0309739", "S0309740", "S0309743", "S0309745", "S0309746", "S0309747", "S0309748", "S0309749", "S0309751", "S0309752", "S0309753", "S0309754", "S0309755", "S0309756", "S0309758", "S0309759", "S0309760", "S0309761", "S0309763", "S0309764", "S0309765", "S0309766", "S0309767", "S0309768", "S0309769", "S0309770", "S0309776", "S0309777", "S0309778", "S0309779", "S0309780", "S0309781", "S0309782", "S0309783", "S0309784", "S0309785", "S0309786", "S0309787", "S0309788", "S0309789", "S0309790", "S0309791", "S0309792", "S0309796", "S0309797", "S0309798", "S0309799", "S0309800", "S0309801", "S0309802", "S0309803", "S0309804", "S0309805", "S0309806", "S0309807", "S0309809", "S0309810", "S0309811", "S0309812", "S0309813", "S0309814", "S0309815", "S0309816", "S0309829", "S0309830", "S0309831", "S0309832", "S0309833", "S0309834", "S0309846", "S0309854", "S0309855", "S0309856", "S0309857", "S0309858", "S0309860", "S0309861", "S0309862", "S0309863", "S0309864", "S0309866", "S0309867", "S0309869", "S0309870", "S0309874", "S0309881", "S0309882", "S0309883", "S0309884", "S0309892", "S0309993", "S0309998", "S0310006", "S0310007", "S0310011", "S0310013", "S0310014", "S0310015", "S0310016", "S0310017", "S0310018", "S0310019", "S0310020", "S0310021", "S0310022", "S0310023", "S0310024", "S0310025", "S0310031", "S0310032", "S0310033", "S0310034", "S0310035", "S0310036", "S0310038", "S0310039", "S0310040", "S0310041", "S0310042", "S0310046", "S0310047", "S0310462", "S0310480", "S0310496", "S0310497", "S0310499", "S0310500", "S0310501", "S0310507", "S0310508", "S0310510", "S0310516", "S0310531", "S0310532", "S0310538", "S0310548", "S0310554", "S0310556", "S0310557", "S0310558", "S0310561", "S0310600", "S0310605", "S0310614", "S0310615", "S0310617", "S0310631", "S0310648", "S0310649", "S0310650", "S0310653", "S0310656", "S0310657", "S0310662", "S0310667", "S0310669", "S0310672", "S0310692", "S0310693", "S0310695", "S0310754", "S0310774", "S0310775", "S0310790", "S0310796", "S0310805", "S0310831", "S0310832", "S0310844", "S0310850", "S0310857", "S0310860", "S0310865", "S0310866", "S0310875", "S0310883", "S0310885", "S0310887", "S0310892", "S0310904", "S0310906", "S0310908", "S0310909", "S0310910", "S0310913", "S0310917", "S0310918", "S0311272", "S0311290", "S0311292", "S0311294", "S0311296", "S0311302", "S0311345", "S0311392", "S0311418", "S0311421", "S0311422", "S0311436", "S0311444", "S0311452", "S0311453", "S0311454", "S0311455", "S0311456", "S0311457", "S0311475", "S0311485", "S0311491", "S0311492", "S0311510", "S0311512", "S0311513", "S0311515", "S0311520", "S0311590", "S0311549", "S0311523", "S0311525", "S0311526", "S0311534", "S0311537", "S0311538", "S0311539", "S0311540", "S0311541", "S0311546", "S0311547", "S0311548", "S0311550", "S0311551", "S0311552", "S0311553", "S0311555", "S0311556", "S0311559", "S0311560", "S0311561", "S0311562", "S0311564", "S0311569", "S0311570", "S0311571", "S0311572", "S0311573", "S0311575", "S0311576", "S0311577", "S0311578", "S0311581", "S0311582", "S0311583", "S0311586", "S0311587", "S0311588", "S0311589", "S0311591", "S0311592", "S0311593", "S0311594", "S0311595", "S0311596", "S0311597", "S0311599", "S0311600", "S0311601", "S0311602", "S0311603", "S0311605", "S0311609", "S0311607", "S0311610", "S0311613", "S0311758", "S0311818", "S0311872", "S0311879", "S0311882", "S0311884", "S0311885", "S0311899", "S0311887", "S0311890", "S0311892", "S0311898", "S0311900", "S0311902", "S0308376", "V0100832", "S0307963", "S0308221", "S0308228", "S0309612", "V2500107", "V2500112", "V2500113", "V2500114", "V2500115", "V2500116", "V2500124", "V2500125", "V2500135", "S0311955", "S0311957", "S0311958", "S0311959", "S0310959", "V2600176", "V2600181", "V2600191", "V2600226", "V2600246", "V2600326", "V2600331", "V2600479", "V2600499", "V2600504", "V2600529", "V2600544", "V2600559", "V2600579", "V2600589", "V2600594", "V2600599", "V2600614", "V2600629", "V2600649", "V2600654", "V2600659", "V2600669", "S0303849", "S0310322", "S0311161", "S0311961", "S0311971", "S0311972", "S0311973", "S0311974", "S0311975", "S0311976", "S0311977", "S0311978", "S0311979", "S0311980", "S0312110", "S0312113", "S0312161", "S0312215", "S0312228", "S0312281", "S0312280", "S0312313", "S0312327", "S0312336", "S0312344", "S0312346", "S0312351", "S0312352", "S0312362", "S0312403", "V0300686", "S0525884", "S0525890", "S0525946", "S0525944", "S0526013", "S0526014", "S0526015", "S0526016", "S0526021", "S0526023", "S0526029", "S0526030", "S0526034", "S0526036", "S0526037", "S0526041", "S0526042", "S0526044", "S0526045", "S0526046", "S0526047", "S0526048", "S0526049", "S0526050", "S0526051", "S0525933", "S0526056", "S0526053", "S0526054", "S0526055", "S0526057", "S0526058", "S0526059", "S0526081", "S0526257", "S0526258", "S0526336", "S0526338", "S0526339", "S0526340", "S0526344", "S0526345", "S0526348", "S0526349", "S0527590", "S0312493", "S0312491", "S0312497", "S0312495", "S0312498", "S0312509", "S0312512", "S0312520", "S0312521", "S0312529", "S0312532", "S0312546", "S0312555", "S0312570", "S0312235", "S0312472", "S0312680", "S0312699", "S0312404", "V0300693", "S0312583", "S0312584", "S0312585", "S0312600", "S0312630", "S0312656", "S0312657", "S0312710", "S0312711", "S0312714", "S0312728", "S0312746", "S0312945", "S0312952", "S0312950", "S0312951", "S0312954", "S0312955", "S0312956", "S0312957", "S0312958", "S0312959", "S0312960", "S0312961", "S0312962", "S0312964", "S0312965", "S0312966", "S0312967", "S0312970", "S0312971", "S0312972", "S0312974", "S0312975", "S0312978", "S0312979", "S0312981", "S0312982", "S0312984", "S0312985", "S0312986", "S0312989", "S0312990", "S0312991", "S0312992", "S0312995", "S0312996", "S0312998", "S0312999", "S0313000", "S0313001", "S0313002", "S0313004", "S0313005", "S0313006", "S0313007", "S0313008", "S0313009", "S0313012", "S0313014", "S0313015", "S0313016", "S0313017", "S0313018", "S0313019", "S0313020", "S0313022", "S0313023", "S0313026", "S0313027", "S0313052", "S0313066", "S0313272", "S0313440", "S0313441", "S0313442", "S0313443", "S0313444", "S0313445", "S0313446", "S0313447", "S0313448", "S0313449", "S0313457", "S0313458", "S0313459", "S0313460", "S0313461", "S0313462", "S0313464", "S0313465", "S0313466", "S0313467", "S0313468", "S0313470", "S0313471", "S0313472", "S0313473", "S0313475", "S0313476", "S0313477", "S0313478", "S0313479", "S0313480", "S0313481", "S0313482", "S0313484", "S0313485", "S0313486", "S0313488", "S0313489", "S0313490", "S0313491", "S0313492", "S0313493", "S0313494", "S0313495", "S0313496", "S0313497", "S0313498", "S0313499", "S0313500", "S0313501", "S0313502", "S0313503", "S0313504", "S0313505", "S0313506", "S0313507", "S0313508", "S0313509", "S0313510", "S0313511", "S0313512", "S0313513", "S0313514", "S0313515", "S0313516", "S0313517", "S0313518", "S0313519", "S0313520", "S0313521", "S0313541", "S0313542", "S0313543", "S0313544", "S0313545", "S0313547", "S0313548", "S0313549", "S0313550", "S0313551", "S0313552", "S0313568", "S0313570", "S0312810", "S0312824", "S0312840", "S0312847", "S0312845", "S0312850", "S0312866", "S0312867", "S0312886", "S0312894", "S0312895", "S0312907", "S0312921", "S0312923", "S0312937", "S0312938", "S0312941", "S0312939", "S0313436", "S0313438", "S0313439", "S0314105", "S0313882", "S0313950", "S0313953", "S0314102", "S0314103", "S0314104", "S0314107", "S0314108", "S0314109", "S0314111", "S0314187", "S0313971", "S0313972", "S0313990", "S0313994", "S0313995", "S0314001", "S0314114", "S0314118", "S0314188", "S0312776", "S0312782", "S0312786", "S0312787", "S0312929", "S0312944", "S0312997", "S0313268", "S0313364", "S0314231", "S0314242", "S0314245", "S0314319", "S0314324", "S0314329", "S0314366", "S0314469", "S0314503", "S0314504", "S0314490", "S0314491", "S0314492", "S0314465", "S0314466", "S0314467", "S0314457", "S0314460", "S0314461", "S0314462", "S0314468", "S0314470", "S0314473", "S0314474", "S0314475", "S0314477", "S0314478", "S0314481", "S0314484", "S0314485", "S0314486", "S0314489", "S0314495", "S0314498", "S0314499", "S0314500", "S0314502", "S0314506", "S0314507", "S0314509", "S0314510", "S0314512", "S0314513", "S0314514", "S0314515", "S0314516", "S0314517", "S0314518", "S0314519", "S0314520", "S0314521", "S0314522", "S0314523", "S0314524", "S0314527", "S0314529", "S0314530", "S0314531", "S0314532", "S0314533", "S0314534", "S0314535", "S0314536", "S0314537", "S0314538", "S0314539", "S0314541", "S0314542", "S0314543", "S0314544", "S0314545", "S0314546", "S0314552", "S0314553", "S0314629", "S0314666", "S0314678", "S0314681", "S0314686", "S0314687", "S0314688", "S0314689", "S0314691", "S0314694", "S0314695", "S0315065", "S0315066", "S0315075", "S0315077", "S0315078", "S0315079", "S0315086", "S0315087", "S0315097", "S0312418", "S0312419", "S0312420", "S0312422", "S0312425", "S0312426", "S0312435", "S0312436", "S0313573", "S0313574", "S0313575", "S0313576", "S0313578", "S0313579", "S0313582", "S0314487", "S0314525", "S0314526", "S0315205", "S0315493", "S0315582", "S0315583", "S0314565", "S0314613", "S0314625", "S0312823", "S0314547", "S0314549", "S0314567", "S0314580", "S0314579", "S0314584", "S0314590", "S0314599", "S0314611", "S0314624", "S0314627", "S0314634", "S0314635", "S0314641", "S0314644", "S0314646", "S0314648", "S0314651", "S0315216", "S0315239", "S0315260", "S0315261", "S0315276", "S0315291", "S0315318", "S0315319", "S0315325", "S0315333", "S0315359", "S0315360", "S0315416", "S0315417", "S0315441", "S0312439", "S0312437", "S0312438", "S0312440", "S0312441", "S0313469", "S0313474", "S0313586", "S0313563", "S0313587", "S0313591", "S0313592", "S0313599", "S0313596", "S0314327", "S0314328", "S0314332", "S0314337", "S0314363", "S0314364", "S0314371", "S0314380", "S0314382", "S0314391", "S0315122", "S0315149", "S0315153", "S0315156", "S0315157", "S0315158", "S0315159", "S0315160", "S0315161", "S0315162", "S0315163", "S0315165", "S0315166", "S0315167", "S0315168", "S0315169", "S0315171", "S0315172", "S0315173", "S0315174", "S0315175", "S0315176", "S0315177", "S0315178", "S0315198", "S0315201", "S0315202", "S0315203", "S0315200", "S0315512", "S0315513", "S0315514", "S0314550", "S0312580", "S0312581", "S0314597", "S0314626", "S0315258", "S0314338", "S0315085", "S0316316", "S0316326", "S0316327", "S0316335", "S0316336", "S0316337", "S0316339", "S0316361", "S0316362", "S0316363", "S0316368", "S0316369", "S0316370", "S0316371", "S0316372", "S0316373", "S0316377", "S0316534", "S0316548", "S0316553", "S0316555", "S0316556", "S0316557", "S0316559", "S0316565", "S0316564", "S0316567", "S0316569", "S0316570", "S0316572", "S0316813", "S0316583", "S0316812", "S0316253", "S0316254", "S0316255", "S0316256", "S0316257", "S0316258", "S0316259", "S0316262", "S0316266", "S0316267", "S0316272", "S0316273", "S0316276", "S0316277", "S0316278", "S0316285", "S0316286", "S0316290", "S0316294", "S0316296", "S0316297", "S0316304", "S0316328", "S0316345", "S0316354", "S0316378", "S0316379", "S0316524", "S0316527", "S0316529", "S0316536", "S0316580", "S0316588", "S0316589", "S0316590", "S0316597", "S0316598", "S0316601", "S0316603", "S0316606", "S0316610", "S0316617", "S0316624", "S0316628", "S0316629", "S0316630", "S0316631", "S0316632", "S0316633", "S0316636", "S0316639", "S0316640", "S0316641", "S0316642", "S0316643", "S0316645", "S0316646", "S0316647", "S0316648", "S0316649", "S0316652", "S0316654", "S0316659", "S0316740", "S0316815", "S0316818", "S0316829", "S0316308", "S0316309", "S0316325", "S0316321", "S0316322", "S0316323", "S0316324", "S0316330", "S0316332", "S0316338", "S0316342", "S0316348", "S0316350", "S0316353", "S0316355", "S0316356", "S0316357", "S0316358", "S0316360", "S0316364", "S0316380", "S0316381", "S0316382", "S0316383", "S0316384", "S0316476", "S0316479", "S0316481", "S0316545", "S0316576", "S0316821", "S0316824", "S0316825", "S0316918", "S0316924", "S0316938", "S0316940", "S0316941", "S0316977", "S0317002", "S0317004", "S0317017", "S0317014", "S0317018", "S0317019", "S0317021", "S0317107", "S0317115", "S0317116", "S0317209", "S0317217", "S0317225", "S0317226", "S0317227", "S0317229", "S0317230", "S0317232", "S0317254", "S0317255", "S0317259", "S0317260", "S0317262", "S0317263", "S0317264", "S0317266", "S0317703", "S0317707", "S0317716", "S0317717", "S0317719", "S0317722", "S0317723", "S0317726", "S0317729", "S0317730", "S0317736", "S0317737", "S0317740", "S0317741", "S0317742", "S0546422", "S0546457", "S0546460", "S0546470", "S0546479", "S0546506", "S0546511", "S0546512", "S0546531", "S0546533", "S0546671", "S0546673", "S0546740", "S0546762", "S0546954", "S0547227", "S0547234", "S0547236", "S0547238", "S0547239", "S0555752", "S0556099", "S0556109", "S0556110", "S0556116", "S0556117", "S0556118", "S0556119", "S0546440", "S0546465", "S0546468", "S0546495", "S0546507", "S0317743", "S0317768", "S0317748", "S0317749", "S0317751", "S0317750", "S0317752", "S0317754", "S0317755", "S0317756", "S0317759", "S0317763", "S0317765", "S0317766", "S0317767", "S0557924", "S0557922", "S0558048", "S0558049", "S0558066", "S0558073", "S0558079", "S0558120", "S0558124", "S0558130", "S0558134", "S0558136", "S0558139", "S0558140", "S0558142", "S0558144", "S0558145", "S0558146", "S0558147", "S0558148", "S0558149", "S0558150", "S0558151", "S0558152", "S0558154", "S0558155", "S0558158", "S0558159", "S0558163", "S0558164", "S0558166", "S0558167", "S0558168", "S0558169", "S0558170", "S0558172", "S0706967", "S0317769", "S0317772", "S0317771", "S0317776", "S0317778", "S0317779", "S0317782", "S0317780", "S0317781", "S0317783", "S0317784", "S0317785", "S0317787", "S0317788", "S0317789", "S0317790", "S0317791", "S0317792", "S0317793", "S0317794", "S0317797", "S0317798", "S0317800", "S0317803", "S0317810", "S0317809", "S0317812", "S0317811", "S0317813", "S0317815", "S0317814", "S0317817", "S0317816", "S0317818", "S0317819", "S0317820", "S0317821", "S0317822", "S0317823", "S0317825", "S0317828", "S0317826", "S0317827", "S0317829", "S0317873", "S0317875", "S0317877", "S0317876", "S0317880", "S0317879", "S0317882", "S0317881", "S0317884", "S0317883", "S0317885", "S0317886", "S0317888", "S0317890", "S0317891", "S0317894", "S0317936", "S0317935", "S0317938", "S0317937", "S0317939", "S0317946", "S0317950", "S0317951", "S0317955", "S0317953", "S0317954", "S0317959", "S0317958", "S0317962", "S0317960", "S0317961", "S0317966", "S0317965", "S0317968", "S0317967", "S0317971", "S0317969", "S0317970", "S0317974", "S0317972", "S0317976", "S0317977", "S0317982", "S0318080", "S0318089", "S0315591", "S0315622", "S0315623", "S0315624", "S0315625", "S0315626", "S0315627", "S0315628", "S0315629", "S0315630", "S0315631", "S0315632", "S0315633", "S0315634", "S0315643", "S0315644", "S0315645", "S0315646", "S0315661", "S0315662", "S0315663", "S0315664", "S0315666", "S0315665", "S0315672", "S0315667", "S0315671", "S0315673", "S0315674", "S0315675", "S0315678", "S0315676", "S0315677", "S0315679", "S0316127", "S0315680", "S0315681", "S0316148", "S0316160", "S0316165", "S0316166", "S0316186", "S0316185", "S0316199", "S0316405", "S0316406", "S0316426", "S0316427", "S0316734", "S0316788", "S0316793", "S0316796", "S0317033", "S0546965", "S0561111", "S0561114", "S0561112", "S0561113", "S0561115", "S0561116", "S0561120", "S0561118", "S0561119", "S0561121", "S0561122", "S0561123", "S0561124", "S0561125", "S0561127", "S0561130", "S0561128", "S0561129", "S0561133", "S0561131", "S0561132", "S0561134", "S0561135", "S0546663", "S0557951", "S0557955", "S0558025", "S0558057", "S0558058", "S0558125", "S0558129", "S0558131", "S0315687", "S0315688", "S0316390", "S0316416", "S0316420", "S0316425", "S0316705", "S0316672", "S0316689", "S0315551", "S0315552", "S0312485", "S0312487", "S0312488", "S0312489", "S0312537", "S0312565", "S0312002", "S0546518", "S0315691", "S0315692", "S0315693", "S0315794", "S0315795", "S0315796", "S0315797", "S0315814", "S0315798", "S0315816", "S0315854", "S0315852", "S0315856", "S0315855", "S0315874", "S0315873", "S0315877", "S0315875", "S0315876", "S0315951", "S0315878", "S0315879", "S0315952", "S0315962", "S0315963", "S0315965", "S0315966", "S0315967", "S0315968", "S0315970", "S0315971", "S0315981", "S0315982", "S0316033", "S0316034", "S0316035", "S0316036", "S0316037", "S0316038", "S0316039", "S0316040", "S0316041", "S0316042", "S0316044", "S0316047", "S0316051", "S0316052", "S0316053", "S0316055", "S0316056", "S0316057", "S0316058", "S0316059", "S0316060", "S0316061", "S0316062", "S0316063", "S0316064", "S0316065", "S0316066", "S0316067", "S0316068", "S0316069", "S0316070", "S0316071", "S0316075", "S0316078", "S0316081", "S0316087", "S0316088", "S0316089", "S0316090", "S0316091", "S0316092", "S0316093", "S0316094", "S0316095", "S0316096", "S0316097", "S0316100", "S0316101", "S0316102", "S0316103", "S0316107", "S0316104", "S0316106", "S0316110", "S0316113", "S0316116", "S0316114", "S0316115", "S0316229"] 
    upload_this = False
    if(categoryEn in allowed_categories.ac and int(thisproduct['wholesalePrice']) > minimum_price.mp):
     logger.wtil("At product: "+str(title_in_english)+" ("+str(categoryEn)+") "+str(i))
     upload_this = True
     disabled_skus = ["S0322441"]
     if(sku in disabled_skus):
      upload_this = False
    else: 
     if(categoryEn not in disabled_categories ):
       disabled_categories.append(categoryEn)
    if(i % 10000 == 0): 
     logger.wtil("disabled_categories: "+str(disabled_categories)+" "+str(i))

    product = Product()
    smalldescription = description[:100]
    description = description
    description_in_english  = this_english_information['description']


    parent_category = this_cat_info['parentCategory']
    style= "NAN"
    color= "NAN"
    gender = "NAN"
    data= [ids,smalldescription,description,title,sku,category,style,color,gender]
    try:
        numberofimages = len(thisimages['images'])
    except:
        numberofimages=0
    for l in range(min(3,numberofimages)) :
        try :
            data.append(thisimages['images'][l]['url'])
        except:
            data.append("")
    for h in range(3-numberofimages):
        data.append("Null")
    data.append(thisproduct['retailPrice'])
    data.append(thisproduct['inShopsPrice'])
    data.append(thisproduct['wholesalePrice'])
    product.setData(data)
    products.append(product)
    if(args.send and upload_this):
      logger.wtil("Passing: "+str(title_in_english))
      payload = {
                     'bigbuy':                            data[0],
                     'description':                       data[1],
                     'extended_description':              data[2],
                     'title':                             data[3],
                     'descriptionInEnglish':              description_in_english,
                     'titleInEnglish':                    title_in_english,
                     'stock_info':                        stock_info,
                     'brand':                             manufacturer,
                     'supplier':                          "bigb",
                     'english_category' :                 categoryEn,
                     'sku':                               data[4],
                     'parent_category':                   data[5],
                     'category':                          data[5],
                     'style':                             data[6],
                     'colour':                            data[7],
                     'gender':                            data[8],
                     'image_1':                           data[9],
                     'image_2':                           data[10],
                     'image_3':                           data[11],
                     'street_price':                      data[12],
                     'suggested_price':                   data[13],
                     'novat_price':                       data[14],
             }
     
      r = requests.post(add_product_endpoint, data=payload)
      logger.wtil(str(r.content))
     
      logger.wtil(str(pprint.pformat(payload)))
      logger.wtil(str(r.content))
      number_of_updated_products = number_of_updated_products + 1

logger.wtil("Number of updated products: "+str(number_of_updated_products))
